---
- name: Find latest stable version
  ansible.builtin.uri:
    url: https://dl.k8s.io/release/stable.txt
    return_content: yes
  register: stable_version
  when: kubectl_version == "latest"

- name: Set version to download when latest stable version
  ansible.builtin.set_fact:
    kubectl_download_version: "{{ stable_version.content }}"
  when: kubectl_version == "latest"

- name: Set version to download if using custom version
  ansible.builtin.set_fact:
    kubectl_download_version: "{{ kubectl_version }}"
  when: kubectl_version != "latest"

- name: Set version to download if using custom version and missing v prefix
  ansible.builtin.set_fact:
    kubectl_download_version: "v{{ kubectl_version }}"
  when:
    - kubectl_version != "latest"
    - "'v' not in kubectl_version"

- name: Set download URL
  ansible.builtin.set_fact:
    kubectl_download_url: "https://dl.k8s.io/release/{{ kubectl_download_version }}/bin/linux/amd64/kubectl"

- name: Set download directory if install only for the user
  ansible.builtin.set_fact:
    kubectl_download_dir: "{{ ansible_user_dir }}/bin"
  when: not kubectl_for_all_users | bool

- name: Set download directory for all users to use
  ansible.builtin.set_fact:
    kubectl_download_dir: "/usr/local/bin"
  when: kubectl_for_all_users | bool

- name: Create bin directory in users home if necessary for local install
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/bin"
    state: directory
    mode: 0755
  when: not kubectl_for_all_users | bool

- name: Download kubectl
  ansible.builtin.uri:
    url: "{{ kubectl_download_url }}"
    dest: "{{ kubectl_download_dir }}/kubectl"
    follow_redirects: all
    status_code: [200, 304]
    mode: 0755

- name: Configure autocompletion for the user only
  ansible.builtin.lineinfile:
    path: "{{ ansible_user_dir }}/.{{ command_shell | lower }}rc"
    regexp: '^source <(kubectl completion {{ command_shell | lower }})'
    line: "source <(kubectl completion {{ command_shell | lower }})"
  when: not kubectl_for_all_users

- name: Set global profile file for bash
  ansible.builtin.set_fact:
    global_profile_file: /etc/profile
  when: kubectl_for_all_users | bool and command_shell | lower == "bash"

- name: Set global profile file for zsh
  ansible.builtin.set_fact:
    global_profile_file: /etc/zshenv
  when: kubectl_for_all_users | bool and command_shell | lower == "zsh"

- name: Configure autocompletion for all users
  ansible.builtin.lineinfile:
    path: "{{ global_profile_file }}"
    regexp: '^source <(kubectl completion {{ command_shell | lower }})'
    line: "source <(kubectl completion {{ command_shell | lower }})"
  when: kubectl_for_all_users
  become: yes
